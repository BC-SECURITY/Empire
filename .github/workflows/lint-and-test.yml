name: Lint and Test

on:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable
      - uses: isort/isort-action@master
  test:
    needs: lint
    timeout-minutes: 15
    runs-on: ubuntu-latest
    name: Test Python ${{ matrix.python-version }}
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10' ]
    steps:
      - uses: actions/checkout@v2
        if: ${{ github.repository == 'BC-SECURITY/Empire' }}
        with:
          submodules: 'recursive'
      # token is only needed in sponsors repo because of private submodules
      # don't use token in public repo because prs from forks cannot access secrets
      - uses: actions/checkout@v2
        if: ${{ github.repository == 'BC-SECURITY/Empire-Sponsors' }}
        with:
          submodules: 'recursive'
          token: ${{ secrets.RELEASE_TOKEN }}
      # Poetry cache depends on OS, Python version and Poetry version.
      # https://gist.github.com/gh640/233a6daf68e9e937115371c0ecd39c61
      - name: Cache Poetry cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ matrix.python-version }}
      # virtualenv cache should depends on OS, Python version and `poetry.lock` (and optionally workflow files).
      - name: Cache Packages
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: |
          curl -sL https://install.python-poetry.org | python - -y
      - name: Install dependencies
        run: |
          poetry install
      - name: Run test suite
        run: |
          poetry run pytest
  test_image:
    # To save CI time, only run these tests on the release PRs
    if: ${{ startsWith(github.head_ref, 'release/') }}
    timeout-minutes: 20
    runs-on: ubuntu-latest
    name: Test Docker Image
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          token: ${{ secrets.RELEASE_TOKEN }}
      - name: Build docker image
        run: docker-compose -f .github/docker-compose.yml build
      - name: Run tests on docker image
        run: docker-compose -f .github/docker-compose.yml run test
      - name: run structure tests base
        uses: plexsystems/container-structure-test-action@v0.1.0
        with:
          image: bcsecurity/empire-test:latest
          config: .github/cst-config-base.yaml
      - name: run structure tests docker
        uses: plexsystems/container-structure-test-action@v0.1.0
        with:
          image: bcsecurity/empire-test:latest
          config: .github/cst-config-docker.yaml
  test_install_script:
    needs: test
    timeout-minutes: 45
    runs-on: ubuntu-latest
    name: Test Install Script
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          depth: 0
      # To save CI time, only run these tests when the install script is changed
      - name: Get changed files using defaults
        id: changed-files
        uses: tj-actions/changed-files@v29.0.2
      - name: Build images
        if: contains(steps.changed-files.outputs.modified_files, 'setup/install.sh')
        run: docker-compose -f .github/install_tests/docker-compose-install-tests.yml build --parallel
      - name: run structure tests base Ubuntu 20.04
        if: contains(steps.changed-files.outputs.modified_files, 'setup/install.sh')
        uses: plexsystems/container-structure-test-action@v0.1.0
        with:
          image: docker.io/bcsecurity/empire-test-ubuntu2004:latest
          config: .github/cst-config-base.yaml
      - name: run structure tests Ubuntu 20.04
        if: contains(steps.changed-files.outputs.modified_files, 'setup/install.sh')
        uses: plexsystems/container-structure-test-action@v0.1.0
        with:
          image: docker.io/bcsecurity/empire-test-ubuntu2004:latest
          config: .github/install_tests/cst-config-ubuntu2004.yaml
      - name: run structure tests base Debian 10
        if: contains(steps.changed-files.outputs.modified_files, 'setup/install.sh')
        uses: plexsystems/container-structure-test-action@v0.1.0
        with:
          image: docker.io/bcsecurity/empire-test-debian10:latest
          config: .github/cst-config-base.yaml
      - name: run structure tests Debian 10
        if: contains(steps.changed-files.outputs.modified_files, 'setup/install.sh')
        uses: plexsystems/container-structure-test-action@v0.1.0
        with:
          image: docker.io/bcsecurity/empire-test-debian10:latest
          config: .github/install_tests/cst-config-debian10.yaml
      - name: run structure tests Kali base
        if: contains(steps.changed-files.outputs.modified_files, 'setup/install.sh')
        uses: plexsystems/container-structure-test-action@v0.1.0
        with:
          image: docker.io/bcsecurity/empire-test-kalirolling:latest
          config: .github/cst-config-base.yaml
      - name: run structure tests Kali
        if: contains(steps.changed-files.outputs.modified_files, 'setup/install.sh')
        uses: plexsystems/container-structure-test-action@v0.1.0
        with:
          image: docker.io/bcsecurity/empire-test-kalirolling:latest
          config: .github/install_tests/cst-config-kalirolling.yaml
