name: Lint and Test

on:
  pull_request:
    branches:
      - master
      - sponsors-master
      - dev
      - sponsors-dev

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable
      - uses: isort/isort-action@master
  test:
    needs: lint
    timeout-minutes: 10
    runs-on: ubuntu-latest
    name: Test Python ${{ matrix.python-version }}
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10' ]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          token: ${{ secrets.RELEASE_TOKEN }}
      # Poetry cache depends on OS, Python version and Poetry version.
      # https://gist.github.com/gh640/233a6daf68e9e937115371c0ecd39c61
      - name: Cache Poetry cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ matrix.python-version }}
      # virtualenv cache should depends on OS, Python version and `poetry.lock` (and optionally workflow files).
      - name: Cache Packages
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: |
          curl -sL https://install.python-poetry.org | python - -y
      - name: Install dependencies
        run: |
          poetry install
      - name: Run test suite
        run: |
          poetry run pytest
  test_image:
    needs: test
    timeout-minutes: 10
    runs-on: ubuntu-latest
    name: Test Docker Image
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Build docker image
        run: docker-compose -f .github/docker-compose.yml build
      - name: Run tests on docker image
        run: docker-compose -f .github/docker-compose.yml run test


