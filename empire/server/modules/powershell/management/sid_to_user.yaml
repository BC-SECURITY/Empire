name: SID-to-User
authors:
  - name: Will Schroeder
    handle: '@harmj0y'
    link: https://twitter.com/harmj0y
description: "Converts a specified Security Identifier (SID) to its corresponding
  user account name. \nThis module performs reverse identity resolution by translating
  Windows security \nidentifiers back into human-readable usernames.\n\nSIDs are
  unique identifiers assigned to security principals in Windows systems, \nincluding
  users, groups, and computers. This reverse lookup capability is essential \nfor
  understanding security events, access control entries, and user permissions \nwhen
  only SIDs are available in logs or system output.\n\nThe module supports both local
  and domain SIDs, enabling operators to identify \nuser accounts from various sources
  including security logs, registry entries, \nfile permissions, and Active Directory
  objects.\n"
software: ''
tactics: [TA0007]
techniques: [T1098, T1087.002]
background: false
output_extension:
needs_admin: false
opsec_safe: true
language: powershell
min_language_version: '2'
comments: []
options:
  - name: Agent
    description: Agent to run module on.
    required: true
    value: ''
  - name: SID
    description: Security Identifier (SID) to translate to username.
    required: true
    value: ''
script: |
  function Invoke-sid_to_user
  {
      [CmdletBinding()]
      Param(
          [Parameter(Mandatory = $true)]
          [string]
          $sid
          )
      (New-Object System.Security.Principal.SecurityIdentifier("$sid")).Translate( [System.Security.Principal.NTAccount]).Value
  }
script_end: Invoke-sid_to_user {{ PARAMS }}
